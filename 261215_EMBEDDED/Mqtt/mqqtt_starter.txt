#include <WiFi.h>
#include <MQTT.h>

const char ssid[] = "@JumboPlusIoT";
const char pass[] = "m11xa0xb";

const char mqtt_broker[] = "test.mosquitto.org";
const char mqtt_topic[] = "group89/command";
const char mqtt_client_id[] = "clientId-Vh8B8PNJxu"; // must change this string to a unique value
int MQTT_PORT = 1883;

#define buttonpin 32
#define LED 18

WiFiClient net;
MQTTClient client;

bool ledState = LOW;

void connect() {
  Serial.print("checking wifi...");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(1000);
  }

  Serial.print("\nconnecting...");
  while (!client.connect(mqtt_client_id)) {  
    Serial.print(".");
    delay(1000);
  }

  Serial.println("\nconnected!");

  client.subscribe(mqtt_topic);
}

void messageReceived(String &topic, String &payload) {
  Serial.println("incoming: " + topic + " - " + payload);

  // Update LED state based on payload
  if (payload == "on") {
    ledState = HIGH;
    digitalWrite(LED, HIGH);
  } else if (payload == "off") {
    ledState = LOW;
    digitalWrite(LED, LOW);
  }
}

void setup() {
  Serial.begin(9600);
  WiFi.begin(ssid, pass);

  pinMode(buttonpin, INPUT_PULLUP);
  pinMode(LED, OUTPUT);
  digitalWrite(LED, LOW); // Turn off LED initially

  client.begin(mqtt_broker, MQTT_PORT, net);
  client.onMessage(messageReceived);

  connect();
}

void loop() {
  client.loop();
  delay(10);  // fixes some issues with WiFi stability

  if (!client.connected()) {
    connect();
  }

  // Send message when button is pressed
  if (digitalRead(buttonpin) == LOW) {
    client.publish(mqtt_topic, "Button Pressed");
    Serial.println("Button Pressed");
    delay(200); // debounce
  }
}